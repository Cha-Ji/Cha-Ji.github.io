{"componentChunkName":"component---src-templates-blog-post-js","path":"/Android/reflection/","result":{"data":{"site":{"siteMetadata":{"title":"Cha-Ji","author":"Cha-Ji","siteUrl":"https://Cha-Ji.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"chaji"}}},"markdownRemark":{"id":"9aca1912-3992-583a-86c7-93c987590bee","excerpt":"리플렉션 객체를 통해 클래스의 정보를 분석하는 기법입니다. Class.class ⇒ Class 클래스의 객체는 자바 프로그램에서 사용되는 클래스들과 인터페이스들을 나타낸다. 사용 가능한 클래스의 인스턴스가 없을 때 .class를 사용하곤 합니다. 인스턴스가 있다면 getClass…","html":"<h2 id=\"리플렉션\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%94%8C%EB%A0%89%EC%85%98\" aria-label=\"리플렉션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리플렉션</h2>\n<ul>\n<li>객체를 통해 클래스의 정보를 분석하는 기법입니다.</li>\n</ul>\n<h3 id=\"classclass\" style=\"position:relative;\"><a href=\"#classclass\" aria-label=\"classclass permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Class.class</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Instances of the class Class represent classes and interfaces\n in a running Java application.  Every array also belongs to a class that is\n reflected as a Class object that is shared by all arrays with\n the same element type and number of dimensions.</code></pre></div>\n<ul>\n<li>⇒ Class 클래스의 객체는 자바 프로그램에서 사용되는 클래스들과 인터페이스들을 나타낸다.</li>\n<li>사용 가능한 클래스의 인스턴스가 없을 때 .class를 사용하곤 합니다.</li>\n<li>인스턴스가 있다면 getClass() 메서드로 얻을 수 있습니다.</li>\n<li>코드 <em>리플렉션</em>에 사용됩니다.</li>\n<li>정규화 된 클래스 이름, 상수 목록, 공용 필드 목록 등과 같은 클래스의 메타 데이터를 수집 할 수 있습니다.</li>\n</ul>\n<h3 id=\"실사용\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%82%AC%EC%9A%A9\" aria-label=\"실사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실사용</h3>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\">Method<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> methods <span class=\"token operator\">=</span> testClass<span class=\"token punctuation\">.</span><span class=\"token function\">getMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//getMethod(\"메서드\", 파라미터);</span>\nMethod method <span class=\"token operator\">=</span> testClass<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"testMethod\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMethod method <span class=\"token operator\">=</span> testClass<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"testMethod\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMethod method <span class=\"token operator\">=</span> testClass<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"testMethod\"</span></span><span class=\"token punctuation\">,</span> String<span class=\"token punctuation\">.</span>class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMethod method <span class=\"token operator\">=</span> testClass<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"testMethod\"</span></span><span class=\"token punctuation\">,</span> new Class<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>String<span class=\"token punctuation\">.</span>class<span class=\"token punctuation\">,</span> Integer<span class=\"token punctuation\">.</span>class<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>리플렉션을 사용하면 외부에서 클래스의 private 메서드도 꺼내볼 수 있습니다.</li>\n</ul>\n<h3 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h3>\n<p><a href=\"https://devyongsik.tistory.com/292\">[Java] Class.class, Class 클래스.</a></p>\n<p><a href=\"https://palpit.tistory.com/entry/Java-%EC%9E%90%EB%B0%94-%EA%B8%B0%EB%B3%B8-API-Class-Class\">[Java] 자바 기본 API - Class Class</a></p>","frontmatter":{"title":"[Java] Reflection","date":"November 06, 2021"}}},"pageContext":{"slug":"/Android/reflection/","previous":{"fields":{"slug":"/Android/inline_function/"},"frontmatter":{"title":"[Kotlin] inline function"}},"next":{"fields":{"slug":"/Android/livedata_to_flow/"},"frontmatter":{"title":"[Kotlin] LiveData -> Coroutine Flow"}}}},"staticQueryHashes":["2486386679","3128451518"]}