{"componentChunkName":"component---src-templates-blog-post-js","path":"/Android/activity/","result":{"data":{"site":{"siteMetadata":{"title":"Cha-Ji","author":"Cha-Ji","siteUrl":"https://Cha-Ji.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"chaji"}}},"markdownRemark":{"id":"52a547a5-2491-5c73-ad91-ec3a53491825","excerpt":"안드로이드 앱을 구현할 때에는 컴포넌트 클래스와 일반 클래스를 구현하게 됩니다.\n그 중 컴포넌트 클래스는 개발자가 아닌 안드로이드가 생명주기를 관리하는 클래스라고 볼 수 있습니다.\n이후에는 4대 컴포넌트라고 일컫는 액티비티, 서비스, 브로드캐스트 리시버, 콘텐츠 프로바이더에 대해 정리해보고자 합니다.\n이 글은 먼저 Activity…","html":"<p>안드로이드 앱을 구현할 때에는 컴포넌트 클래스와 일반 클래스를 구현하게 됩니다.\n그 중 컴포넌트 클래스는 개발자가 아닌 안드로이드가 생명주기를 관리하는 클래스라고 볼 수 있습니다.\n이후에는 4대 컴포넌트라고 일컫는 액티비티, 서비스, 브로드캐스트 리시버, 콘텐츠 프로바이더에 대해 정리해보고자 합니다.\n이 글은 먼저 Activity를 정리합니다.</p>\n<h2 id=\"인텐트\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%85%90%ED%8A%B8\" aria-label=\"인텐트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인텐트</h2>\n<blockquote>\n<p>컴포넌트를 실행하려고 시스템에 전달하는 메시지</p>\n</blockquote>\n<p>인텐트의 원리와 액티비티의 생명주기를 알아야만 액티비티를 제대로 개발할 수 있습니다.\n<code class=\"language-text\">Activity</code>에서 다른 <code class=\"language-text\">Activity</code>를 실행시키기 위해서는 시스템에 인텐트를 전달해야 합니다. <code class=\"language-text\">manifest</code>에 등록하면 컴포넌트를 시스템에 알릴 수 있습니다.\n이러한 중재 역할은 외부 앱의 컴포넌트와도 해당됩니다.</p>\n<h3 id=\"명시적-인텐트-vs-암시적-인텐트\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EC%8B%9C%EC%A0%81-%EC%9D%B8%ED%85%90%ED%8A%B8-vs-%EC%95%94%EC%8B%9C%EC%A0%81-%EC%9D%B8%ED%85%90%ED%8A%B8\" aria-label=\"명시적 인텐트 vs 암시적 인텐트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>명시적 인텐트 vs 암시적 인텐트</h3>\n<p>명시적 인텐트는 클래스 타입 레퍼런스 정보를 이용합니다. 호출 대상을 명확히 알 수 있습니다.\n주로 내부 앱을 실행시킬 때 사용되며 특정 Activity를 명시적으로 실행시킵니다.</p>\n<p>암시적 인텐트는 실행할 액티비티를 문자열 정보로 나타냅니다. 유저가 호출 대상을 선택합니다.\n주로 외부 앱을 실행시킬 때 사용되며 “연결프로그램” -  “카카오맵”, “구글 지도”, “네이버 지도” 등을 선택하라는 화면을 예시로 들 수 있습니다.</p>\n<h2 id=\"액티비티-생명주기\" style=\"position:relative;\"><a href=\"#%EC%95%A1%ED%8B%B0%EB%B9%84%ED%8B%B0-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0\" aria-label=\"액티비티 생명주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>액티비티 생명주기</h2>\n<p>생명주기란 생성부터 소멸까지의 과정을 말하며, Activity에서는 상태 변화를 알아차릴 수 있는 콜백함수를 제공합니다.</p>\n<h3 id=\"활성\" style=\"position:relative;\"><a href=\"#%ED%99%9C%EC%84%B1\" aria-label=\"활성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>활성</h3>\n<p>포커스를 갖는 상태입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token function\">onCrate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">onResume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>처음 실행된 액티비티는 세 콜백함수가 호출되며 <code class=\"language-text\">setContentView()</code>함수로 출력한 내용이 비춰집니다.</p>\n<h3 id=\"일시정지\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EC%8B%9C%EC%A0%95%EC%A7%80\" aria-label=\"일시정지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일시정지</h3>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token function\">onPause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>한 콜백함수가 호출된 상태이며 포커스를 잃어 사용자 이벤트를 처리할 수 없는 상태입니다.\n포커스를 다시 찾는다면 <code class=\"language-text\">onResume()</code>함수가 호출되고 활성 상태로 바뀝니다.</p>\n<h3 id=\"비활성\" style=\"position:relative;\"><a href=\"#%EB%B9%84%ED%99%9C%EC%84%B1\" aria-label=\"비활성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비활성</h3>\n<p>종료된건 아니지만 액티비티가 보이지 않는 상태입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token function\">onPause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">onStop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>활성에서 비활성 상태가 되면 두 콜백함수가 호출됩니다.\n다시 활성상태로 돌아가면</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token function\">onRestart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">onResume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>세 콜백함수가 호출되어 활성 상태가 됩니다.</p>\n<h3 id=\"화면-회전하기\" style=\"position:relative;\"><a href=\"#%ED%99%94%EB%A9%B4-%ED%9A%8C%EC%A0%84%ED%95%98%EA%B8%B0\" aria-label=\"화면 회전하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>화면 회전하기</h3>\n<p>onPause() -> onStop() -> onSaveInstanceState() -> onDestroy()\n-> onCreate() -> onStart() -> onRestoreInstanceState() -> onResume()</p>\n<p>완전히 종료된 뒤 다시 생성됩니다.</p>\n<h3 id=\"다이얼로그-띄우기\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%9D%B4%EC%96%BC%EB%A1%9C%EA%B7%B8-%EB%9D%84%EC%9A%B0%EA%B8%B0\" aria-label=\"다이얼로그 띄우기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다이얼로그 띄우기</h3>\n<p>일반 다이얼로그는 그저 view이기에 생명주기의 변화가 없습니다.</p>\n<p>하지만 permission을 요청하는 다이얼로그를 띄울 때에는 onPause()를 호출합니다.</p>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>인텐트를 이해해야 액티비티 간 데이터를 다룰 수 있습니다.\n또한 생명주기를 고려해야 데이터를 손실없이 보장할 수 있습니다.\n단순히 정적인 화면이 아니라면, 인텐트와 생명주기를 이해해야만 액티비티를 활용할 수 있습니다.</p>\n<h3 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h3>\n<ul>\n<li>강성윤. 2021. <em>Do it! 깡샘의 안드로이드 프로그래밍 with 코틀린: 18개 실습 예제로 배우는 모바일 앱 개발</em>. 이지퍼블리싱(주)</li>\n</ul>","frontmatter":{"title":"[Android] Activity Component","date":"July 11, 2022"}}},"pageContext":{"slug":"/Android/activity/","previous":{"fields":{"slug":"/O.S./11_io_system/"},"frontmatter":{"title":"[공룡책] 입출력 시스템"}},"next":{"fields":{"slug":"/etc/개발상식/"},"frontmatter":{"title":"[etc] 좋은 코드"}}}},"staticQueryHashes":["2486386679","3128451518"]}