{"componentChunkName":"component---src-templates-blog-post-js","path":"/O.S./fragmentation/","result":{"data":{"site":{"siteMetadata":{"title":"Cha-Ji","author":"Cha-Ji","siteUrl":"https://Cha-Ji.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"chaji"}}},"markdownRemark":{"id":"c46236b4-923e-5617-920d-fa373a5afdf7","excerpt":"단편화 이전 글에서 언급한 내외부 단편화를 간단히 정리했습니다. 내부 단편화 1gb의 메모리 공간에 990mb의 프로세스가 적재된다고 가정하겠습니다. 10mb의 공간이 남으며 새로운 프로세스를 적재하기엔 좁은 공간입니다. 필요 없는 기억자료가 할당된 영역 내부에 있지만, 쓰이지 않는 것을 내부 단편화라 합니다. 외부 단편화 두 개의 1gb의 메모리 공간에 1.5gb의 프로세스가 적재된다고 가정하겠습니다. 두 공간의 공간을 합치면 1.5gb보다 큰 2gb지만, 1.5gb…","html":"<h1 id=\"단편화\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%ED%8E%B8%ED%99%94\" aria-label=\"단편화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단편화</h1>\n<p>이전 글에서 언급한 내외부 단편화를 간단히 정리했습니다.</p>\n<h3 id=\"내부-단편화\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EB%B6%80-%EB%8B%A8%ED%8E%B8%ED%99%94\" aria-label=\"내부 단편화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내부 단편화</h3>\n<p>1gb의 메모리 공간에 990mb의 프로세스가 적재된다고 가정하겠습니다.</p>\n<p>10mb의 공간이 남으며 새로운 프로세스를 적재하기엔 좁은 공간입니다.</p>\n<p>필요 없는 기억자료가 할당된 영역 내부에 있지만, 쓰이지 않는 것을 내부 단편화라 합니다.</p>\n<h3 id=\"외부-단편화\" style=\"position:relative;\"><a href=\"#%EC%99%B8%EB%B6%80-%EB%8B%A8%ED%8E%B8%ED%99%94\" aria-label=\"외부 단편화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>외부 단편화</h3>\n<p>두 개의 1gb의 메모리 공간에 1.5gb의 프로세스가 적재된다고 가정하겠습니다.</p>\n<p>두 공간의 공간을 합치면 1.5gb보다 큰 2gb지만, 1.5gb의 프로세스는 좁아서 적재될 수 없습니다.</p>\n<p>사용할 수 없는 기억장소가 할당된 영역 밖에 있다는 것을 뜻하며 외부 단편화라 합니다.</p>","frontmatter":{"title":"[OS] 단편화","date":"July 09, 2020"}}},"pageContext":{"slug":"/O.S./fragmentation/","previous":{"fields":{"slug":"/O.S./8_main_memory/"},"frontmatter":{"title":"[공룡책] 메인메모리"}},"next":{"fields":{"slug":"/O.S./dirty_bit/"},"frontmatter":{"title":"[OS] Dirty Bit"}}}},"staticQueryHashes":["2486386679","3128451518"]}